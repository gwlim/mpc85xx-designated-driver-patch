--- ./target/linux/ar71xx/files/drivers/net/ethernet/atheros/ag71xx/ag71xx.h
+++ ./target/linux/ar71xx/files/drivers/net/ethernet/atheros/ag71xx/ag71xx.h
@@ -90,10 +90,7 @@ struct ag71xx_buf {
 		struct sk_buff	*skb;
 		void		*rx_buf;
 	};
-	union {
-		dma_addr_t	dma_addr;
-		unsigned long	timestamp;
-	};
+	dma_addr_t	dma_addr;
 	unsigned int		len;
 };
 
--- ./target/linux/ar71xx/files/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c
+++ ./target/linux/ar71xx/files/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c
@@ -774,7 +774,6 @@ static netdev_tx_t ag71xx_hard_start_xmi
 	i = (ring->curr + n - 1) % ring->size;
 	ring->buf[i].len = skb->len;
 	ring->buf[i].skb = skb;
-	ring->buf[i].timestamp = jiffies;
 
 	netdev_sent_queue(dev, skb->len);
 
@@ -794,7 +793,7 @@ static netdev_tx_t ag71xx_hard_start_xmi
 	}
 
 	DBG("%s: packet injected into TX queue\n", ag->dev->name);
-
+	ag->dev->trans_start = jiffies;
 	/* enable TX engine */
 	ag71xx_wr(ag, AG71XX_REG_TX_CTRL, TX_CTRL_TXE);
 
@@ -830,14 +831,14 @@ static void ag71xx_restart_work_func(struct work_struct *work)
 	ag71xx_open(ag->dev);
 }
 
-static bool ag71xx_check_dma_stuck(struct ag71xx *ag, unsigned long timestamp)
+static bool ag71xx_check_dma_stuck(struct ag71xx *ag, struct net_device *dev)
 {
 	u32 rx_sm, tx_sm, rx_fd;
 
-	if (likely(time_before(jiffies, timestamp + HZ/10)))
+	if (likely(time_before(jiffies, dev->trans_start + HZ / 10)))
 		return false;
 
-	if (!netif_carrier_ok(ag->dev))
+	if (!netif_carrier_ok(dev))
 		return false;
 
 	rx_sm = ag71xx_rr(ag, AG71XX_REG_RX_SM);
@@ -924,7 +923,7 @@ static int ag71xx_tx_packets(struct ag71
 
 		if (!flush && !ag71xx_desc_empty(desc)) {
 			if (pdata->is_ar7240 &&
-			    ag71xx_check_dma_stuck(ag, ring->buf[i].timestamp))
+			    ag71xx_check_dma_stuck(ag, ag->dev))
 				schedule_work(&ag->restart_work);
 			break;
 		}
